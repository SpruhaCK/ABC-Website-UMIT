<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Records</title>
    <link rel="stylesheet" href="css/collegeStudentRecords.css">
    <style>
        .filter-icon {
            cursor: pointer;
            margin-left: 5px;
            font-size: 14px;
        }

        .filter-container {
            display: none;
            position: absolute;
            background: white;
            border: 1px solid #ccc;
            padding: 5px;
            z-index: 10;
        }

        .filter-select {
            width: 120px;
            padding: 5px;
            border: 1px solid #ccc;
        }
    </style>
</head>
<body>
    <nav>
        <div class="header-banner">
            <div class="banner-bg"></div>
            <a href="/" class="banner-img-container">
                <img class="banner-img" src="images/logo.png" alt="University Logo" />
            </a>
            <div class="banner-text">
                <span class="banner-title">Shreemati Nathibai Damodar Thackersey Women’s University<br/></span>
                <span class="banner-subtitle">1, Nathibai Thackersey Road, Mumbai 400020</span>
            </div>
        </div>
    </nav>

    <main>
        <div class="dashboard">
            <h2>Student Records</h2>

            <!-- Export Button -->
            <button onclick="exportToExcel()" class="export-button">Export to Excel</button>

            <!-- Student Table -->
            <table id="student-table">
                <thead>
                    <tr>
                        <th>PRN <span class="filter-icon" onclick="toggleFilter(0)">▼</span></th>
                        <th>ABC Id <span class="filter-icon" onclick="toggleFilter(1)">▼</span></th>
                        <th>Student Name <span class="filter-icon" onclick="toggleFilter(2)">▼</span></th>
                        <th>Course Name <span class="filter-icon" onclick="toggleFilter(3)">▼</span></th>
                        <th>College <span class="filter-icon" onclick="toggleFilter(4)">▼</span></th>
                        <th>Completion Status <span class="filter-icon" onclick="toggleFilter(5)">▼</span></th>
                        <th>Enrollment Date <span class="filter-icon" onclick="toggleFilter(6)">▼</span></th>
                        <th>Completion Date <span class="filter-icon" onclick="toggleFilter(7)">▼</span></th>
                        <th>Certificate</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each students}}
                    <tr>
                        <td>{{this.prnNumber}}</td>
                        <td>{{this.abcId}}</td>
                        <td>{{this.studentName}}</td>
                        <td>{{this.courseName}}</td>
                        <td>{{this.collegeName}}</td>
                        <td>{{this.status}}</td>
                        <td>{{this.enrollmentDate}}</td>
                        <td>{{#if this.completionDate}}{{this.completionDate}}{{else}}N/A{{/if}}</td>
                        <td>
                            {{#if this.certificateUrl}}
                                <a href="{{this.certificateUrl}}" target="_blank">Download</a>
                            {{else}}
                                N/A
                            {{/if}}
                        </td>
                    </tr>
                    {{else}}
                    <tr>
                        <td colspan="9" style="text-align:center;">No student records found</td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>

            <!-- Filter Dropdown (Initially Hidden) -->
            <div id="filter-box" class="filter-container">
                <select id="filter-select" class="filter-select" onchange="applyFilter()">
                    <option value="all">All</option>
                </select>
            </div>
        </div>
    </main>

    <script src="js/collegeStudentRecords.js"></script>

    <script>
        let activeFilterIndex = null;

        function toggleFilter(index) {
            const filterBox = document.getElementById("filter-box");
            const filterSelect = document.getElementById("filter-select");
            const filterIcon = document.querySelectorAll(".filter-icon")[index];

            if (activeFilterIndex === index) {
                // Close filter if already open
                filterBox.style.display = "none";
                filterIcon.textContent = "▼";
                activeFilterIndex = null;
            } else {
                // Open filter dropdown and move it near the selected column
                activeFilterIndex = index;
                const thElements = document.querySelectorAll("th");
                const rect = thElements[index].getBoundingClientRect();

                filterBox.style.display = "block";
                filterBox.style.top = `${rect.bottom + window.scrollY}px`;
                filterBox.style.left = `${rect.left + window.scrollX}px`;

                // Change icon
                document.querySelectorAll(".filter-icon").forEach(icon => icon.textContent = "▼");
                filterIcon.textContent = "▲";

                // Populate dropdown with unique values from the selected column
                populateFilterOptions(index);
            }
        }

        function populateFilterOptions(columnIndex) {
            const filterSelect = document.getElementById("filter-select");
            const tableRows = document.querySelectorAll("tbody tr");
            const uniqueValues = new Set();

            tableRows.forEach(row => {
                const cell = row.children[columnIndex];
                if (cell) {
                    uniqueValues.add(cell.textContent.trim());
                }
            });

            // Clear existing options
            filterSelect.innerHTML = '<option value="all">All</option>';
            uniqueValues.forEach(value => {
                const option = document.createElement("option");
                option.value = value;
                option.textContent = value;
                filterSelect.appendChild(option);
            });
        }

        function applyFilter() {
            if (activeFilterIndex === null) return;

            const filterValue = document.getElementById("filter-select").value.toLowerCase();
            const tableRows = document.querySelectorAll("tbody tr");

            tableRows.forEach(row => {
                const cell = row.children[activeFilterIndex];
                if (cell) {
                    const cellText = cell.textContent.toLowerCase();
                    row.style.display = (filterValue === "all" || cellText === filterValue) ? "" : "none";
                }
            });
        }

        // Hide filter box when clicking outside
        document.addEventListener("click", function (event) {
            const filterBox = document.getElementById("filter-box");
            if (!filterBox.contains(event.target) && !event.target.classList.contains("filter-icon")) {
                filterBox.style.display = "none";
                activeFilterIndex = null;
                document.querySelectorAll(".filter-icon").forEach(icon => icon.textContent = "▼");
            }
        });
    </script>

</body>
</html>
